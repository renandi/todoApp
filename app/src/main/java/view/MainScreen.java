/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultListModel;
import model.Project;
import model.Task;
import util.ButtonColumnCellRenderer;
import util.DeadlineColumnCellRenderer;
import util.TaskTableModel;

/**
 *
 * @author Renan
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController projController;
    TaskController taskController;

    DefaultListModel projModel;
    TaskTableModel tasksModel;

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();

        this.setLocationRelativeTo(null);

        initDataController();
        initComponentModel();

        decorateTableTask();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emptyListPanel = new javax.swing.JPanel();
        emptyListIconLabel = new javax.swing.JLabel();
        emptyListTitleLabel = new javax.swing.JLabel();
        emptyListSubtitleLabel = new javax.swing.JLabel();
        bannerPanel = new javax.swing.JPanel();
        bannerTitleLabel = new javax.swing.JLabel();
        bannerSubtitleLabel = new javax.swing.JLabel();
        projectsPanel = new javax.swing.JPanel();
        projectsTitleLabel = new javax.swing.JLabel();
        projectsIconLabel = new javax.swing.JLabel();
        tasksPanel = new javax.swing.JPanel();
        tasksTitleLabel = new javax.swing.JLabel();
        tasksIconLabel = new javax.swing.JLabel();
        projectstListPanel = new javax.swing.JPanel();
        projectsScrollPane = new javax.swing.JScrollPane();
        projectsList = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        tasksScrollPane = new javax.swing.JScrollPane();
        tasksTable = new javax.swing.JTable();

        emptyListPanel.setBackground(java.awt.Color.white);

        emptyListIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emptyListIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8_list_view_60px.png"))); // NOI18N

        emptyListTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emptyListTitleLabel.setForeground(new java.awt.Color(0, 153, 102));
        emptyListTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emptyListTitleLabel.setText("No tasks here yet.");

        emptyListSubtitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        emptyListSubtitleLabel.setForeground(new java.awt.Color(0, 153, 102));
        emptyListSubtitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emptyListSubtitleLabel.setText("Click + to add a new task.");

        org.jdesktop.layout.GroupLayout emptyListPanelLayout = new org.jdesktop.layout.GroupLayout(emptyListPanel);
        emptyListPanel.setLayout(emptyListPanelLayout);
        emptyListPanelLayout.setHorizontalGroup(
            emptyListPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(emptyListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(emptyListPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, emptyListSubtitleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
                    .add(emptyListTitleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(emptyListIconLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        emptyListPanelLayout.setVerticalGroup(
            emptyListPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(emptyListPanelLayout.createSequentialGroup()
                .add(72, 72, 72)
                .add(emptyListIconLabel)
                .add(18, 18, 18)
                .add(emptyListTitleLabel)
                .add(18, 18, 18)
                .add(emptyListSubtitleLabel)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));

        bannerPanel.setBackground(new java.awt.Color(0, 153, 102));

        bannerTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        bannerTitleLabel.setForeground(java.awt.Color.white);
        bannerTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bannerTitleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8_Check_Circle_52px.png"))); // NOI18N
        bannerTitleLabel.setText(" Todo App");

        bannerSubtitleLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        bannerSubtitleLabel.setForeground(java.awt.Color.white);
        bannerSubtitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bannerSubtitleLabel.setText("      Don't forget anything!");

        org.jdesktop.layout.GroupLayout bannerPanelLayout = new org.jdesktop.layout.GroupLayout(bannerPanel);
        bannerPanel.setLayout(bannerPanelLayout);
        bannerPanelLayout.setHorizontalGroup(
            bannerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bannerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(bannerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(bannerTitleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, bannerSubtitleLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        bannerPanelLayout.setVerticalGroup(
            bannerPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bannerPanelLayout.createSequentialGroup()
                .add(21, 21, 21)
                .add(bannerTitleLabel)
                .add(18, 18, 18)
                .add(bannerSubtitleLabel)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        projectsPanel.setBackground(java.awt.Color.white);
        projectsPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        projectsTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        projectsTitleLabel.setForeground(new java.awt.Color(0, 153, 102));
        projectsTitleLabel.setText("Projects");

        projectsIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8_plus_+_30px_1.png"))); // NOI18N
        projectsIconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectsIconLabelMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout projectsPanelLayout = new org.jdesktop.layout.GroupLayout(projectsPanel);
        projectsPanel.setLayout(projectsPanelLayout);
        projectsPanelLayout.setHorizontalGroup(
            projectsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(projectsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(projectsTitleLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 71, Short.MAX_VALUE)
                .add(projectsIconLabel)
                .addContainerGap())
        );
        projectsPanelLayout.setVerticalGroup(
            projectsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(projectsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(projectsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(projectsTitleLabel)
                    .add(projectsIconLabel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tasksPanel.setBackground(java.awt.Color.white);
        tasksPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tasksTitleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tasksTitleLabel.setForeground(new java.awt.Color(0, 153, 102));
        tasksTitleLabel.setText("Tasks");

        tasksIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons8_plus_+_30px_1.png"))); // NOI18N
        tasksIconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tasksIconLabelMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout tasksPanelLayout = new org.jdesktop.layout.GroupLayout(tasksPanel);
        tasksPanel.setLayout(tasksPanelLayout);
        tasksPanelLayout.setHorizontalGroup(
            tasksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tasksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(tasksTitleLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(tasksIconLabel)
                .addContainerGap())
        );
        tasksPanelLayout.setVerticalGroup(
            tasksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tasksPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(tasksPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(tasksTitleLabel)
                    .add(tasksIconLabel))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        projectstListPanel.setBackground(java.awt.Color.white);

        projectsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        projectsScrollPane.setHorizontalScrollBar(null);

        projectsList.setBackground(java.awt.Color.white);
        projectsList.setBorder(null);
        projectsList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        projectsList.setForeground(new java.awt.Color(0, 0, 0));
        projectsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        projectsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        projectsList.setFixedCellHeight(36);
        projectsList.setSelectionBackground(new java.awt.Color(0, 153, 102));
        projectsList.setSelectionForeground(new java.awt.Color(255, 255, 255));
        projectsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectsListMouseClicked(evt);
            }
        });
        projectsScrollPane.setViewportView(projectsList);

        org.jdesktop.layout.GroupLayout projectstListPanelLayout = new org.jdesktop.layout.GroupLayout(projectstListPanel);
        projectstListPanel.setLayout(projectstListPanelLayout);
        projectstListPanelLayout.setHorizontalGroup(
            projectstListPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, projectsScrollPane)
        );
        projectstListPanelLayout.setVerticalGroup(
            projectstListPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, projectsScrollPane)
        );

        jPanel5.setBackground(java.awt.Color.white);

        tasksTable.setBackground(new java.awt.Color(255, 255, 255));
        tasksTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tasksTable.setForeground(new java.awt.Color(0, 0, 0));
        tasksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Description", "Deadline", "Done"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tasksTable.setGridColor(new java.awt.Color(0, 102, 102));
        tasksTable.setRowHeight(40);
        tasksTable.setSelectionBackground(new java.awt.Color(0, 203, 152));
        tasksTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        tasksTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tasksTable.setShowGrid(false);
        tasksTable.setShowHorizontalLines(true);
        tasksTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tasksTableMouseClicked(evt);
            }
        });
        tasksScrollPane.setViewportView(tasksTable);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tasksScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tasksScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(bannerPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(projectstListPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(projectsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(tasksPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(bannerPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(projectsPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(tasksPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(projectstListPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void projectsIconLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsIconLabelMouseClicked
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        projectDialogScreen.setLocationRelativeTo(null);
        projectDialogScreen.setVisible(true);

        projectDialogScreen.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                loadProjects();
            }
        });
    }//GEN-LAST:event_projectsIconLabelMouseClicked

    private void tasksIconLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasksIconLabelMouseClicked
        // TODO add your handling code here:
        TaskDialogScreen taskDialog = new TaskDialogScreen(this, rootPaneCheckingEnabled);
        //taskDialog.setProj(projectsList.getSelectedValue());
        taskDialog.setLocationRelativeTo(null);

        int projIndex = projectsList.getSelectedIndex();
        Project project = (Project) projModel.get(projIndex);
        taskDialog.setProject(project);

        taskDialog.setVisible(true);

        taskDialog.addWindowListener(new WindowAdapter() {
            public void windowClosed(WindowEvent e) {
                loadTasks(project.getId());
            }
        });
    }//GEN-LAST:event_tasksIconLabelMouseClicked

    private void tasksTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tasksTableMouseClicked
        // TODO add your handling code here:
        int rowIndex = tasksTable.rowAtPoint(evt.getPoint());
        int columnIndex = tasksTable.columnAtPoint(evt.getPoint());

        switch (columnIndex) {
            case 3:
                taskController.update(tasksModel.getTasks().get(rowIndex));
        }
    }//GEN-LAST:event_tasksTableMouseClicked

    private void projectsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsListMouseClicked
        // TODO add your handling code here:
        int projIndex = projectsList.getSelectedIndex();
        Project project = (Project) projModel.get(projIndex);
        loadTasks(project.getId());

        System.out.println("Project clicked has Id " + project.getId());
    }//GEN-LAST:event_projectsListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bannerPanel;
    private javax.swing.JLabel bannerSubtitleLabel;
    private javax.swing.JLabel bannerTitleLabel;
    private javax.swing.JLabel emptyListIconLabel;
    private javax.swing.JPanel emptyListPanel;
    private javax.swing.JLabel emptyListSubtitleLabel;
    private javax.swing.JLabel emptyListTitleLabel;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel projectsIconLabel;
    private javax.swing.JList<String> projectsList;
    private javax.swing.JPanel projectsPanel;
    private javax.swing.JScrollPane projectsScrollPane;
    private javax.swing.JLabel projectsTitleLabel;
    private javax.swing.JPanel projectstListPanel;
    private javax.swing.JLabel tasksIconLabel;
    private javax.swing.JPanel tasksPanel;
    private javax.swing.JScrollPane tasksScrollPane;
    private javax.swing.JTable tasksTable;
    private javax.swing.JLabel tasksTitleLabel;
    // End of variables declaration//GEN-END:variables

    public void decorateTableTask() {
        //Customize tasks's table header
        tasksTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        tasksTable.getTableHeader().setBackground(new Color(0, 153, 102));
        tasksTable.getTableHeader().setForeground(new Color(255, 255, 255));

        //Turn auto sorting on
        tasksTable.setAutoCreateRowSorter(true);

//        tasksTable.getColumnModel().getColumn(2).setCellRenderer(new DeadlineColumnCellRenderer());
        tasksTable.getColumnModel().getColumn(4).setCellRenderer(new ButtonColumnCellRenderer("edit"));
        tasksTable.getColumnModel().getColumn(5).setCellRenderer(new ButtonColumnCellRenderer("delete"));

    }

    public void initDataController() {
        projController = new ProjectController();
        taskController = new TaskController();
    }

    public void initComponentModel() {
        projModel = new DefaultListModel();

        loadProjects();

        tasksModel = new TaskTableModel();

        if (!projModel.isEmpty()) {
            projectsList.setSelectedIndex(0);
            Project project = (Project) projModel.get(0);
            loadTasks(project.getId());
        }
    }

    public void loadTasks(int idProj) {
        List<Task> tasks = taskController.getAll(idProj);
        tasksModel.setTasks(tasks);
        tasksTable.setModel(tasksModel);
        showTasksTable(!tasks.isEmpty());
    }

    public void loadProjects() {
        projModel.clear();
        projModel.addAll(projController.getAll());

        projectsList.setModel(projModel);
    }

    private void showTasksTable(boolean hasTasks) {

        //Check if there are loaded tasks
        if (hasTasks) {
            if (emptyListPanel.isVisible()) {
                emptyListPanel.setVisible(false);
                jPanel5.remove(emptyListPanel);
            }

            jPanel5.add(tasksScrollPane);
            tasksScrollPane.setVisible(true);
            tasksScrollPane.setSize(jPanel5.getWidth(), jPanel5.getHeight());
        } else {
            if (tasksScrollPane.isVisible()) {
                tasksScrollPane.setVisible(false);
                jPanel5.remove(tasksScrollPane);
            }

            jPanel5.add(emptyListPanel);
            emptyListPanel.setVisible(true);
            emptyListPanel.setSize(jPanel5.getWidth(), jPanel5.getHeight());
        }
    }
}
